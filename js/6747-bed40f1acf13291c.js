"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6747],{22032:function(e,t,s){/**
 * @license React
 * use-sync-external-store-shim/with-selector.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var n=s(82933),r=s(6414),o="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},i=r.useSyncExternalStore,u=n.useRef,h=n.useEffect,a=n.useMemo,c=n.useDebugValue;t.useSyncExternalStoreWithSelector=function(e,t,s,n,r){var l=u(null);if(null===l.current){var d={hasValue:!1,value:null};l.current=d}else d=l.current;var _=i(e,(l=a(function(){function e(e){if(!h){if(h=!0,i=e,e=n(e),void 0!==r&&d.hasValue){var t=d.value;if(r(t,e))return u=t}return u=e}if(t=u,o(i,e))return t;var s=n(e);return void 0!==r&&r(t,s)?t:(i=e,u=s)}var i,u,h=!1,a=void 0===s?null:s;return[function(){return e(t())},null===a?void 0:function(){return e(a())}]},[t,s,n,r]))[0],l[1]);return h(function(){d.hasValue=!0,d.value=_},[_]),c(_),_}},56856:function(e,t,s){e.exports=s(22032)},11859:function(e,t,s){s.r(t),s.d(t,{QueryClientContext:function(){return o},QueryClientProvider:function(){return u},useQueryClient:function(){return i}});var n=s(82933),r=s(9579),o=n.createContext(void 0),i=e=>{let t=n.useContext(o);if(e)return e;if(!t)throw Error("No QueryClient set, use QueryClientProvider to set one");return t},u=e=>{let{client:t,children:s}=e;return n.useEffect(()=>(t.mount(),()=>{t.unmount()}),[t]),(0,r.jsx)(o.Provider,{value:t,children:s})}},8964:function(e,t,s){s.d(t,{x0:function(){return n}});var n=(0,s(9162).k)("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",7);Symbol("internal_openai_fn_messages"),new TextDecoder("utf-8")},9162:function(e,t,s){s.d(t,{k:function(){return n}});let n=function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:21;return function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:t,n="",r=s;for(;r--;)n+=e[Math.random()*e.length|0];return n}}},86505:function(e,t,s){s.d(t,{Z:function(){return p}});var n,r=s(65868);globalThis.EventTarget&&globalThis.Event||console.error("\n  PartySocket requires a global 'EventTarget' class to be available!\n  You can polyfill this global by adding this to your code before any partysocket imports: \n  \n  ```\n  import 'partysocket/event-target-polyfill';\n  ```\n  Please file an issue at https://github.com/partykit/partykit if you're still having trouble.\n");var o=class extends Event{constructor(e,t){super("error",t),this.message=e.message,this.error=e}},i=class extends Event{constructor(e=1e3,t="",s){super("close",s),this.wasClean=!0,this.code=e,this.reason=t}},u={ErrorEvent:o,CloseEvent:i},h=void 0!==r&&void 0!==(null===(n=r.versions)||void 0===n?void 0:n.node)&&"undefined"==typeof document?function(e){return"data"in e?new MessageEvent(e.type,e):"code"in e||"reason"in e?new i(e.code||1999,e.reason||"unknown reason",e):"error"in e?new o(e.error,e):new Event(e.type,e)}:function(e){return new e.constructor(e.type,e)},a={maxReconnectionDelay:1e4,minReconnectionDelay:1e3+4e3*Math.random(),minUptime:5e3,reconnectionDelayGrowFactor:1.3,connectionTimeout:4e3,maxRetries:1/0,maxEnqueuedMessages:1/0},c=!1,l=class e extends EventTarget{static get CONNECTING(){return 0}static get OPEN(){return 1}static get CLOSING(){return 2}static get CLOSED(){return 3}get CONNECTING(){return e.CONNECTING}get OPEN(){return e.OPEN}get CLOSING(){return e.CLOSING}get CLOSED(){return e.CLOSED}get binaryType(){return this._ws?this._ws.binaryType:this._binaryType}set binaryType(e){this._binaryType=e,this._ws&&(this._ws.binaryType=e)}get retryCount(){return Math.max(this._retryCount,0)}get bufferedAmount(){return this._messageQueue.reduce((e,t)=>("string"==typeof t?e+=t.length:t instanceof Blob?e+=t.size:e+=t.byteLength,e),0)+(this._ws?this._ws.bufferedAmount:0)}get extensions(){return this._ws?this._ws.extensions:""}get protocol(){return this._ws?this._ws.protocol:""}get readyState(){return this._ws?this._ws.readyState:this._options.startClosed?e.CLOSED:e.CONNECTING}get url(){return this._ws?this._ws.url:""}get shouldReconnect(){return this._shouldReconnect}close(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e3,t=arguments.length>1?arguments[1]:void 0;if(this._closeCalled=!0,this._shouldReconnect=!1,this._clearTimeouts(),!this._ws){this._debug("close enqueued: no ws instance");return}if(this._ws.readyState===this.CLOSED){this._debug("close: already closed");return}this._ws.close(e,t)}reconnect(e,t){this._shouldReconnect=!0,this._closeCalled=!1,this._retryCount=-1,this._ws&&this._ws.readyState!==this.CLOSED&&this._disconnect(e,t),this._connect()}send(e){if(this._ws&&this._ws.readyState===this.OPEN)this._debug("send",e),this._ws.send(e);else{let{maxEnqueuedMessages:t=a.maxEnqueuedMessages}=this._options;this._messageQueue.length<t&&(this._debug("enqueue",e),this._messageQueue.push(e))}}_debug(){for(var e=arguments.length,t=Array(e),s=0;s<e;s++)t[s]=arguments[s];this._options.debug&&this._debugLogger("RWS>",...t)}_getNextDelay(){let{reconnectionDelayGrowFactor:e=a.reconnectionDelayGrowFactor,minReconnectionDelay:t=a.minReconnectionDelay,maxReconnectionDelay:s=a.maxReconnectionDelay}=this._options,n=0;return this._retryCount>0&&(n=t*Math.pow(e,this._retryCount-1))>s&&(n=s),this._debug("next delay",n),n}_wait(){return new Promise(e=>{setTimeout(e,this._getNextDelay())})}_getNextProtocols(e){if(!e)return Promise.resolve(null);if("string"==typeof e||Array.isArray(e))return Promise.resolve(e);if("function"==typeof e){let t=e();if(!t)return Promise.resolve(null);if("string"==typeof t||Array.isArray(t))return Promise.resolve(t);if(t.then)return t}throw Error("Invalid protocols")}_getNextUrl(e){if("string"==typeof e)return Promise.resolve(e);if("function"==typeof e){let t=e();if("string"==typeof t)return Promise.resolve(t);if(t.then)return t}throw Error("Invalid URL")}_connect(){if(this._connectLock||!this._shouldReconnect)return;this._connectLock=!0;let{maxRetries:e=a.maxRetries,connectionTimeout:t=a.connectionTimeout}=this._options;if(this._retryCount>=e){this._debug("max retries reached",this._retryCount,">=",e);return}this._retryCount++,this._debug("connect",this._retryCount),this._removeListeners(),this._wait().then(()=>Promise.all([this._getNextUrl(this._url),this._getNextProtocols(this._protocols||null)])).then(e=>{let[s,n]=e;if(this._closeCalled){this._connectLock=!1;return}this._options.WebSocket||"undefined"!=typeof WebSocket||c||(console.error("‼️ No WebSocket implementation available. You should define options.WebSocket. \n\nFor example, if you're using node.js, run `npm install ws`, and then in your code:\n\nimport PartySocket from 'partysocket';\nimport WS from 'ws';\n\nconst partysocket = new PartySocket({\n  host: \"127.0.0.1:1999\",\n  room: \"test-room\",\n  WebSocket: WS\n});\n\n"),c=!0);let r=this._options.WebSocket||WebSocket;this._debug("connect",{url:s,protocols:n}),this._ws=n?new r(s,n):new r(s),this._ws.binaryType=this._binaryType,this._connectLock=!1,this._addListeners(),this._connectTimeout=setTimeout(()=>this._handleTimeout(),t)}).catch(e=>{this._connectLock=!1,this._handleError(new u.ErrorEvent(Error(e.message),this))})}_handleTimeout(){this._debug("timeout event"),this._handleError(new u.ErrorEvent(Error("TIMEOUT"),this))}_disconnect(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1e3,t=arguments.length>1?arguments[1]:void 0;if(this._clearTimeouts(),this._ws){this._removeListeners();try{this._ws.close(e,t),this._handleClose(new u.CloseEvent(e,t,this))}catch(e){}}}_acceptOpen(){this._debug("accept open"),this._retryCount=0}_removeListeners(){this._ws&&(this._debug("removeListeners"),this._ws.removeEventListener("open",this._handleOpen),this._ws.removeEventListener("close",this._handleClose),this._ws.removeEventListener("message",this._handleMessage),this._ws.removeEventListener("error",this._handleError))}_addListeners(){this._ws&&(this._debug("addListeners"),this._ws.addEventListener("open",this._handleOpen),this._ws.addEventListener("close",this._handleClose),this._ws.addEventListener("message",this._handleMessage),this._ws.addEventListener("error",this._handleError))}_clearTimeouts(){clearTimeout(this._connectTimeout),clearTimeout(this._uptimeTimeout)}constructor(e,t,s={}){super(),this._retryCount=-1,this._shouldReconnect=!0,this._connectLock=!1,this._binaryType="blob",this._closeCalled=!1,this._messageQueue=[],this._debugLogger=console.log.bind(console),this.onclose=null,this.onerror=null,this.onmessage=null,this.onopen=null,this._handleOpen=e=>{this._debug("open event");let{minUptime:t=a.minUptime}=this._options;clearTimeout(this._connectTimeout),this._uptimeTimeout=setTimeout(()=>this._acceptOpen(),t),function(e,t){if(!e)throw Error(t)}(this._ws,"WebSocket is not defined"),this._ws.binaryType=this._binaryType,this._messageQueue.forEach(e=>{var t;return null===(t=this._ws)||void 0===t?void 0:t.send(e)}),this._messageQueue=[],this.onopen&&this.onopen(e),this.dispatchEvent(h(e))},this._handleMessage=e=>{this._debug("message event"),this.onmessage&&this.onmessage(e),this.dispatchEvent(h(e))},this._handleError=e=>{this._debug("error event",e.message),this._disconnect(void 0,"TIMEOUT"===e.message?"timeout":void 0),this.onerror&&this.onerror(e),this._debug("exec error listeners"),this.dispatchEvent(h(e)),this._connect()},this._handleClose=e=>{this._debug("close event"),this._clearTimeouts(),this._shouldReconnect&&this._connect(),this.onclose&&this.onclose(e),this.dispatchEvent(h(e))},this._url=e,this._protocols=t,this._options=s,this._options.startClosed&&(this._shouldReconnect=!1),this._options.debugLogger&&(this._debugLogger=this._options.debugLogger),this._connect()}},d=e=>null!==e[1]&&void 0!==e[1];function _(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},{host:n,path:r,protocol:o,room:i,party:u,query:h}=e,a=n.replace(/^(http|https|ws|wss):\/\//,"");if(a.endsWith("/")&&(a=a.slice(0,-1)),r&&r.startsWith("/"))throw Error("path must not start with a slash");let c=r?"/".concat(r):"",l=o||(a.startsWith("localhost:")||a.startsWith("127.0.0.1:")||a.startsWith("192.168.")||a.startsWith("10.")||a.startsWith("172.")&&a.split(".")[1]>="16"&&a.split(".")[1]<="31"||a.startsWith("[::ffff:7f00:1]:")?t:t+"s"),_="".concat(l,"://").concat(a,"/").concat(u?"parties/".concat(u):"party","/").concat(i).concat(c),p=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return"".concat(_,"?").concat(new URLSearchParams([...Object.entries(s),...Object.entries(e).filter(d)]))};return{host:a,path:c,room:i,name:null!=u?u:"main",protocol:l,partyUrl:_,urlProvider:"function"==typeof h?async()=>p(await h()):p(h)}}var p=class extends l{updateProperties(e){var t,s,n;let r=f({...this.partySocketOptions,...e,host:null!==(t=e.host)&&void 0!==t?t:this.host,room:null!==(s=e.room)&&void 0!==s?s:this.room,path:null!==(n=e.path)&&void 0!==n?n:this.path});this._url=r.urlProvider,this._protocols=r.protocols,this._options=r.socketOptions,this.setWSProperties(r)}setWSProperties(e){let{_pk:t,_pkurl:s,name:n,room:r,host:o,path:i}=e;this._pk=t,this._pkurl=s,this.name=n,this.room=r,this.host=o,this.path=i}reconnect(e,t){if(!this.room||!this.host)throw Error("The room and host must be set before connecting, use `updateProperties` method to set them or pass them to the constructor.");super.reconnect(e,t)}get id(){return this._pk}get roomUrl(){return this._pkurl}static async fetch(e,t){var s;let n=_(e,"http"),r="string"==typeof n.urlProvider?n.urlProvider:await n.urlProvider();return(null!==(s=e.fetch)&&void 0!==s?s:fetch)(r,t)}constructor(e){let t=f(e);super(t.urlProvider,t.protocols,t.socketOptions),this.partySocketOptions=e,this.setWSProperties(t)}};function f(e){let{id:t,host:s,path:n,party:r,room:o,protocol:i,query:u,protocols:h,...a}=e,c=t||function(){if("undefined"!=typeof crypto&&crypto.randomUUID)return crypto.randomUUID();let e=new Date().getTime(),t="undefined"!=typeof performance&&performance.now&&1e3*performance.now()||0;return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(s){let n=16*Math.random();return e>0?(n=(e+n)%16|0,e=Math.floor(e/16)):(n=(t+n)%16|0,t=Math.floor(t/16)),("x"===s?n:3&n|8).toString(16)})}(),l=_(e,"ws",{_pk:c});return{_pk:c,_pkurl:l.partyUrl,name:l.name,room:l.room,host:l.host,path:l.path,protocols:h,socketOptions:a,urlProvider:l.urlProvider}}},55748:function(e,t,s){s.d(t,{Ue:function(){return l}});let n=e=>{let t;let s=new Set,n=(e,n)=>{let r="function"==typeof e?e(t):e;if(!Object.is(r,t)){let e=t;t=(null!=n?n:"object"!=typeof r)?r:Object.assign({},t,r),s.forEach(s=>s(t,e))}},r=()=>t,o={setState:n,getState:r,subscribe:e=>(s.add(e),()=>s.delete(e)),destroy:()=>{console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."),s.clear()}};return t=e(n,r,o),o},r=e=>e?n(e):n;var o=s(82933),i=s(56856);let{useDebugValue:u}=o,{useSyncExternalStoreWithSelector:h}=i,a=!1,c=e=>{"function"!=typeof e&&console.warn("[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.");let t="function"==typeof e?r(e):e,s=(e,s)=>(function(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.getState,s=arguments.length>2?arguments[2]:void 0;s&&!a&&(console.warn("[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937"),a=!0);let n=h(e.subscribe,e.getState,e.getServerState||e.getState,t,s);return u(n),n})(t,e,s);return Object.assign(s,t),s},l=e=>e?c(e):c}}]);